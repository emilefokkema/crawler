[
 {
  "script": "'use strict';",
  "tree": {
   "type": "Program",
   "start": 0,
   "end": 13,
   "body": [
    {
     "type": "ExpressionStatement",
     "start": 0,
     "end": 13,
     "expression": {
      "type": "Literal",
      "start": 0,
      "end": 12,
      "value": "use strict",
      "raw": "'use strict'"
     },
     "directive": "use strict"
    }
   ],
   "sourceType": "script"
  },
  "visitorCases": [
   {
    "methods": [
     {
      "methodName": "Node",
      "expectedNodeTypes": [
       "ExpressionStatement",
       "Literal"
      ]
     }
    ]
   },
   {
    "methods": [
     {
      "methodName": "Node",
      "expectedNodeTypes": [
       "Literal"
      ]
     },
     {
      "methodName": "Statement",
      "expectedNodeTypes": [
       "ExpressionStatement"
      ]
     }
    ]
   },
   {
    "methods": [
     {
      "methodName": "Expression",
      "expectedNodeTypes": []
     },
     {
      "methodName": "Literal",
      "expectedNodeTypes": [
       "Literal"
      ]
     },
     {
      "methodName": "Statement",
      "expectedNodeTypes": [
       "ExpressionStatement"
      ]
     }
    ]
   },
   {
    "methods": [
     {
      "methodName": "Expression",
      "expectedNodeTypes": [
       "Literal"
      ]
     },
     {
      "methodName": "Statement",
      "expectedNodeTypes": [
       "ExpressionStatement"
      ]
     }
    ]
   },
   {
    "methods": [
     {
      "methodName": "Node",
      "expectedNodeTypes": [
       "Literal"
      ]
     },
     {
      "methodName": "ExpressionStatement",
      "expectedNodeTypes": [
       "ExpressionStatement"
      ]
     }
    ]
   },
   {
    "methods": [
     {
      "methodName": "Node",
      "expectedNodeTypes": [
       "Literal"
      ]
     },
     {
      "methodName": "Statement",
      "expectedNodeTypes": []
     },
     {
      "methodName": "ExpressionStatement",
      "expectedNodeTypes": [
       "ExpressionStatement"
      ]
     }
    ]
   },
   {
    "methods": [
     {
      "methodName": "Node",
      "expectedNodeTypes": [
       "Literal"
      ]
     },
     {
      "methodName": "Statement",
      "expectedNodeTypes": []
     },
     {
      "methodName": "ExpressionStatement",
      "expectedNodeTypes": []
     },
     {
      "methodName": "Directive",
      "expectedNodeTypes": [
       "ExpressionStatement"
      ]
     }
    ]
   }
  ]
 },
 {
  "script": "(function(){})",
  "tree": {
   "type": "Program",
   "start": 0,
   "end": 14,
   "body": [
    {
     "type": "ExpressionStatement",
     "start": 0,
     "end": 14,
     "expression": {
      "type": "FunctionExpression",
      "start": 1,
      "end": 13,
      "id": null,
      "expression": false,
      "generator": false,
      "async": false,
      "params": [],
      "body": {
       "type": "BlockStatement",
       "start": 11,
       "end": 13,
       "body": []
      }
     }
    }
   ],
   "sourceType": "script"
  },
  "visitorCases": [
   {
    "methods": [
     {
      "methodName": "Node",
      "expectedNodeTypes": [
       "ExpressionStatement",
       "FunctionExpression",
       "BlockStatement"
      ]
     }
    ]
   },
   {
    "methods": [
     {
      "methodName": "Node",
      "expectedNodeTypes": [
       "ExpressionStatement",
       "FunctionExpression"
      ]
     },
     {
      "methodName": "BlockStatement",
      "expectedNodeTypes": [
       "BlockStatement"
      ]
     }
    ]
   },
   {
    "methods": [
     {
      "methodName": "Node",
      "expectedNodeTypes": [
       "ExpressionStatement",
       "FunctionExpression"
      ]
     },
     {
      "methodName": "FunctionBody",
      "expectedNodeTypes": [
       "BlockStatement"
      ]
     }
    ]
   },
   {
    "methods": [
     {
      "methodName": "Node",
      "expectedNodeTypes": [
       "ExpressionStatement",
       "FunctionExpression"
      ]
     },
     {
      "methodName": "BlockStatement",
      "expectedNodeTypes": []
     },
     {
      "methodName": "FunctionBody",
      "expectedNodeTypes": [
       "BlockStatement"
      ]
     }
    ]
   },
   {
    "methods": [
     {
      "methodName": "Function",
      "expectedNodeTypes": []
     },
     {
      "methodName": "Expression",
      "expectedNodeTypes": []
     }
    ],
    "expectException": true
   }
  ]
 },
 {
  "script": "(function a(b, c){})",
  "tree": {
   "type": "Program",
   "start": 0,
   "end": 20,
   "body": [
    {
     "type": "ExpressionStatement",
     "start": 0,
     "end": 20,
     "expression": {
      "type": "FunctionExpression",
      "start": 1,
      "end": 19,
      "id": {
       "type": "Identifier",
       "start": 10,
       "end": 11,
       "name": "a"
      },
      "expression": false,
      "generator": false,
      "async": false,
      "params": [
       {
        "type": "Identifier",
        "start": 12,
        "end": 13,
        "name": "b"
       },
       {
        "type": "Identifier",
        "start": 15,
        "end": 16,
        "name": "c"
       }
      ],
      "body": {
       "type": "BlockStatement",
       "start": 17,
       "end": 19,
       "body": []
      }
     }
    }
   ],
   "sourceType": "script"
  },
  "visitorCases": [
   {
    "methods": [
     {
      "methodName": "Pattern",
      "expectedNodeTypes": [
       "Identifier",
       "Identifier",
       "Identifier"
      ]
     }
    ]
   },
   {
    "methods": [
     {
      "methodName": "Identifier",
      "expectedNodeTypes": [
       "Identifier",
       "Identifier",
       "Identifier"
      ]
     }
    ]
   },
   {
    "methods": [
     {
      "methodName": "Expression",
      "expectedNodeTypes": [
       "FunctionExpression",
       "Identifier",
       "Identifier",
       "Identifier"
      ]
     }
    ]
   },
   {
    "methods": [
     {
      "methodName": "Pattern",
      "expectedNodeTypes": []
     },
     {
      "methodName": "Identifier",
      "expectedNodeTypes": [
       "Identifier",
       "Identifier",
       "Identifier"
      ]
     }
    ]
   }
  ]
 },
 {
  "script": "/a/;",
  "tree": {
   "type": "Program",
   "start": 0,
   "end": 3,
   "body": [
    {
     "type": "ExpressionStatement",
     "start": 0,
     "end": 3,
     "expression": {
      "type": "Literal",
      "start": 0,
      "end": 3,
      "value": {},
      "raw": "/a/",
      "regex": {
       "pattern": "a",
       "flags": ""
      }
     }
    }
   ],
   "sourceType": "script"
  },
  "visitorCases": [
   {
    "methods": [
     {
      "methodName": "RegExpLiteral",
      "expectedNodeTypes": [
       "Literal"
      ]
     }
    ]
   }
  ]
 },
 {
  "script": "with(a){b;c;}",
  "tree": {
   "type": "Program",
   "start": 0,
   "end": 13,
   "body": [
    {
     "type": "WithStatement",
     "start": 0,
     "end": 13,
     "object": {
      "type": "Identifier",
      "start": 5,
      "end": 6,
      "name": "a"
     },
     "body": {
      "type": "BlockStatement",
      "start": 7,
      "end": 13,
      "body": [
       {
        "type": "ExpressionStatement",
        "start": 8,
        "end": 10,
        "expression": {
         "type": "Identifier",
         "start": 8,
         "end": 9,
         "name": "b"
        }
       },
       {
        "type": "ExpressionStatement",
        "start": 10,
        "end": 12,
        "expression": {
         "type": "Identifier",
         "start": 10,
         "end": 11,
         "name": "c"
        }
       }
      ]
     }
    }
   ],
   "sourceType": "script"
  },
  "visitorCases": [
   {
    "methods": [
     {
      "methodName": "Identifier",
      "expectedNodeTypes": [
       "Identifier",
       "Identifier",
       "Identifier"
      ]
     }
    ]
   }
  ]
 },
 {
  "script": "(function a(){a: return 0;})",
  "tree": {
   "type": "Program",
   "start": 0,
   "end": 28,
   "body": [
    {
     "type": "ExpressionStatement",
     "start": 0,
     "end": 28,
     "expression": {
      "type": "FunctionExpression",
      "start": 1,
      "end": 27,
      "id": {
       "type": "Identifier",
       "start": 10,
       "end": 11,
       "name": "a"
      },
      "expression": false,
      "generator": false,
      "async": false,
      "params": [],
      "body": {
       "type": "BlockStatement",
       "start": 13,
       "end": 27,
       "body": [
        {
         "type": "LabeledStatement",
         "start": 14,
         "end": 26,
         "body": {
          "type": "ReturnStatement",
          "start": 17,
          "end": 26,
          "argument": {
           "type": "Literal",
           "start": 24,
           "end": 25,
           "value": 0,
           "raw": "0"
          }
         },
         "label": {
          "type": "Identifier",
          "start": 14,
          "end": 15,
          "name": "a"
         }
        }
       ]
      }
     }
    }
   ],
   "sourceType": "script"
  },
  "visitorCases": [
   {
    "methods": [
     {
      "methodName": "Identifier",
      "expectedNodeTypes": [
       "Identifier",
       "Identifier"
      ]
     },
     {
      "methodName": "Literal",
      "expectedNodeTypes": [
       "Literal"
      ]
     }
    ]
   }
  ]
 },
 {
  "script": "if(a){b;}",
  "tree": {
   "type": "Program",
   "start": 0,
   "end": 9,
   "body": [
    {
     "type": "IfStatement",
     "start": 0,
     "end": 9,
     "test": {
      "type": "Identifier",
      "start": 3,
      "end": 4,
      "name": "a"
     },
     "consequent": {
      "type": "BlockStatement",
      "start": 5,
      "end": 9,
      "body": [
       {
        "type": "ExpressionStatement",
        "start": 6,
        "end": 8,
        "expression": {
         "type": "Identifier",
         "start": 6,
         "end": 7,
         "name": "b"
        }
       }
      ]
     },
     "alternate": null
    }
   ],
   "sourceType": "script"
  },
  "visitorCases": [
   {
    "methods": [
     {
      "methodName": "Identifier",
      "expectedNodeTypes": [
       "Identifier",
       "Identifier"
      ]
     }
    ]
   }
  ]
 },
 {
  "script": "if(a){b;}else{c;}",
  "tree": {
   "type": "Program",
   "start": 0,
   "end": 17,
   "body": [
    {
     "type": "IfStatement",
     "start": 0,
     "end": 17,
     "test": {
      "type": "Identifier",
      "start": 3,
      "end": 4,
      "name": "a"
     },
     "consequent": {
      "type": "BlockStatement",
      "start": 5,
      "end": 9,
      "body": [
       {
        "type": "ExpressionStatement",
        "start": 6,
        "end": 8,
        "expression": {
         "type": "Identifier",
         "start": 6,
         "end": 7,
         "name": "b"
        }
       }
      ]
     },
     "alternate": {
      "type": "BlockStatement",
      "start": 13,
      "end": 17,
      "body": [
       {
        "type": "ExpressionStatement",
        "start": 14,
        "end": 16,
        "expression": {
         "type": "Identifier",
         "start": 14,
         "end": 15,
         "name": "c"
        }
       }
      ]
     }
    }
   ],
   "sourceType": "script"
  },
  "visitorCases": [
   {
    "methods": [
     {
      "methodName": "Identifier",
      "expectedNodeTypes": [
       "Identifier",
       "Identifier",
       "Identifier"
      ]
     }
    ]
   }
  ]
 },
 {
  "script": "switch(a){case 0: a;case 1: b;default: c;}",
  "tree": {
   "type": "Program",
   "start": 0,
   "end": 42,
   "body": [
    {
     "type": "SwitchStatement",
     "start": 0,
     "end": 42,
     "discriminant": {
      "type": "Identifier",
      "start": 7,
      "end": 8,
      "name": "a"
     },
     "cases": [
      {
       "type": "SwitchCase",
       "start": 10,
       "end": 20,
       "consequent": [
        {
         "type": "ExpressionStatement",
         "start": 18,
         "end": 20,
         "expression": {
          "type": "Identifier",
          "start": 18,
          "end": 19,
          "name": "a"
         }
        }
       ],
       "test": {
        "type": "Literal",
        "start": 15,
        "end": 16,
        "value": 0,
        "raw": "0"
       }
      },
      {
       "type": "SwitchCase",
       "start": 20,
       "end": 30,
       "consequent": [
        {
         "type": "ExpressionStatement",
         "start": 28,
         "end": 30,
         "expression": {
          "type": "Identifier",
          "start": 28,
          "end": 29,
          "name": "b"
         }
        }
       ],
       "test": {
        "type": "Literal",
        "start": 25,
        "end": 26,
        "value": 1,
        "raw": "1"
       }
      },
      {
       "type": "SwitchCase",
       "start": 30,
       "end": 41,
       "consequent": [
        {
         "type": "ExpressionStatement",
         "start": 39,
         "end": 41,
         "expression": {
          "type": "Identifier",
          "start": 39,
          "end": 40,
          "name": "c"
         }
        }
       ],
       "test": null
      }
     ]
    }
   ],
   "sourceType": "script"
  },
  "visitorCases": [
   {
    "methods": [
     {
      "methodName": "Identifier",
      "expectedNodeTypes": [
       "Identifier",
       "Identifier",
       "Identifier",
       "Identifier"
      ]
     }
    ]
   }
  ]
 },
 {
  "script": "try{throw a;}catch(b){c;}finally{d;}",
  "tree": {
   "type": "Program",
   "start": 0,
   "end": 36,
   "body": [
    {
     "type": "TryStatement",
     "start": 0,
     "end": 36,
     "block": {
      "type": "BlockStatement",
      "start": 3,
      "end": 13,
      "body": [
       {
        "type": "ThrowStatement",
        "start": 4,
        "end": 12,
        "argument": {
         "type": "Identifier",
         "start": 10,
         "end": 11,
         "name": "a"
        }
       }
      ]
     },
     "handler": {
      "type": "CatchClause",
      "start": 13,
      "end": 25,
      "param": {
       "type": "Identifier",
       "start": 19,
       "end": 20,
       "name": "b"
      },
      "body": {
       "type": "BlockStatement",
       "start": 21,
       "end": 25,
       "body": [
        {
         "type": "ExpressionStatement",
         "start": 22,
         "end": 24,
         "expression": {
          "type": "Identifier",
          "start": 22,
          "end": 23,
          "name": "c"
         }
        }
       ]
      }
     },
     "finalizer": {
      "type": "BlockStatement",
      "start": 32,
      "end": 36,
      "body": [
       {
        "type": "ExpressionStatement",
        "start": 33,
        "end": 35,
        "expression": {
         "type": "Identifier",
         "start": 33,
         "end": 34,
         "name": "d"
        }
       }
      ]
     }
    }
   ],
   "sourceType": "script"
  },
  "visitorCases": [
   {
    "methods": [
     {
      "methodName": "Identifier",
      "expectedNodeTypes": [
       "Identifier",
       "Identifier",
       "Identifier",
       "Identifier"
      ]
     }
    ]
   }
  ]
 },
 {
  "script": "while(a){b;}",
  "tree": {
   "type": "Program",
   "start": 0,
   "end": 12,
   "body": [
    {
     "type": "WhileStatement",
     "start": 0,
     "end": 12,
     "test": {
      "type": "Identifier",
      "start": 6,
      "end": 7,
      "name": "a"
     },
     "body": {
      "type": "BlockStatement",
      "start": 8,
      "end": 12,
      "body": [
       {
        "type": "ExpressionStatement",
        "start": 9,
        "end": 11,
        "expression": {
         "type": "Identifier",
         "start": 9,
         "end": 10,
         "name": "b"
        }
       }
      ]
     }
    }
   ],
   "sourceType": "script"
  },
  "visitorCases": [
   {
    "methods": [
     {
      "methodName": "Identifier",
      "expectedNodeTypes": [
       "Identifier",
       "Identifier"
      ]
     }
    ]
   }
  ]
 },
 {
  "script": "do{b;}while(a)",
  "tree": {
   "type": "Program",
   "start": 0,
   "end": 14,
   "body": [
    {
     "type": "DoWhileStatement",
     "start": 0,
     "end": 14,
     "body": {
      "type": "BlockStatement",
      "start": 2,
      "end": 6,
      "body": [
       {
        "type": "ExpressionStatement",
        "start": 3,
        "end": 5,
        "expression": {
         "type": "Identifier",
         "start": 3,
         "end": 4,
         "name": "b"
        }
       }
      ]
     },
     "test": {
      "type": "Identifier",
      "start": 12,
      "end": 13,
      "name": "a"
     }
    }
   ],
   "sourceType": "script"
  },
  "visitorCases": [
   {
    "methods": [
     {
      "methodName": "Identifier",
      "expectedNodeTypes": [
       "Identifier",
       "Identifier"
      ]
     }
    ]
   }
  ]
 },
 {
  "script": "for(a;b;c){}",
  "tree": {
   "type": "Program",
   "start": 0,
   "end": 12,
   "body": [
    {
     "type": "ForStatement",
     "start": 0,
     "end": 12,
     "init": {
      "type": "Identifier",
      "start": 4,
      "end": 5,
      "name": "a"
     },
     "test": {
      "type": "Identifier",
      "start": 6,
      "end": 7,
      "name": "b"
     },
     "update": {
      "type": "Identifier",
      "start": 8,
      "end": 9,
      "name": "c"
     },
     "body": {
      "type": "BlockStatement",
      "start": 10,
      "end": 12,
      "body": []
     }
    }
   ],
   "sourceType": "script"
  },
  "visitorCases": [
   {
    "methods": [
     {
      "methodName": "Identifier",
      "expectedNodeTypes": [
       "Identifier",
       "Identifier",
       "Identifier"
      ]
     }
    ]
   }
  ]
 },
 {
  "script": "for(a in b){c;}",
  "tree": {
   "type": "Program",
   "start": 0,
   "end": 15,
   "body": [
    {
     "type": "ForInStatement",
     "start": 0,
     "end": 15,
     "left": {
      "type": "Identifier",
      "start": 4,
      "end": 5,
      "name": "a"
     },
     "right": {
      "type": "Identifier",
      "start": 9,
      "end": 10,
      "name": "b"
     },
     "body": {
      "type": "BlockStatement",
      "start": 11,
      "end": 15,
      "body": [
       {
        "type": "ExpressionStatement",
        "start": 12,
        "end": 14,
        "expression": {
         "type": "Identifier",
         "start": 12,
         "end": 13,
         "name": "c"
        }
       }
      ]
     }
    }
   ],
   "sourceType": "script"
  },
  "visitorCases": [
   {
    "methods": [
     {
      "methodName": "Identifier",
      "expectedNodeTypes": [
       "Identifier",
       "Identifier",
       "Identifier"
      ]
     }
    ]
   }
  ]
 },
 {
  "script": "function a(b, c){d;}",
  "tree": {
   "type": "Program",
   "start": 0,
   "end": 20,
   "body": [
    {
     "type": "FunctionDeclaration",
     "start": 0,
     "end": 20,
     "id": {
      "type": "Identifier",
      "start": 9,
      "end": 10,
      "name": "a"
     },
     "expression": false,
     "generator": false,
     "async": false,
     "params": [
      {
       "type": "Identifier",
       "start": 11,
       "end": 12,
       "name": "b"
      },
      {
       "type": "Identifier",
       "start": 14,
       "end": 15,
       "name": "c"
      }
     ],
     "body": {
      "type": "BlockStatement",
      "start": 16,
      "end": 20,
      "body": [
       {
        "type": "ExpressionStatement",
        "start": 17,
        "end": 19,
        "expression": {
         "type": "Identifier",
         "start": 17,
         "end": 18,
         "name": "d"
        }
       }
      ]
     }
    }
   ],
   "sourceType": "script"
  },
  "visitorCases": [
   {
    "methods": [
     {
      "methodName": "Identifier",
      "expectedNodeTypes": [
       "Identifier",
       "Identifier",
       "Identifier",
       "Identifier"
      ]
     }
    ]
   },
   {
    "methods": [
     {
      "methodName": "Function",
      "expectedNodeTypes": [
       "FunctionDeclaration"
      ]
     }
    ]
   },
   {
    "methods": [
     {
      "methodName": "Statement",
      "expectedNodeTypes": [
        "BlockStatement",
        "ExpressionStatement"
      ]
     },
     {
      "methodName": "Function",
      "expectedNodeTypes": [
       "FunctionDeclaration"
      ]
     }
    ]
   },
   {
    "methods": [
     {
      "methodName": "Declaration",
      "expectedNodeTypes": [
       "FunctionDeclaration"
      ]
     }
    ]
   },
   {
    "methods": [
     {
      "methodName": "Statement",
      "expectedNodeTypes": [
       "FunctionDeclaration",
       "BlockStatement",
       "ExpressionStatement"
      ]
     }
    ]
   },
   {
    "methods": [
     {
      "methodName": "Function",
      "expectedNodeTypes": [
      ]
     },
     {
      "methodName": "Declaration",
      "expectedNodeTypes": [
      ]
     }
    ],
    "expectException": true
   }
  ]
 }
]